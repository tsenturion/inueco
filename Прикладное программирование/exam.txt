блок 1
Оперативная память и объекты в Python. Идентификация объектов (функция id()).
Структура программы на Python. Модули, инструкции, выражения.
Базовые конструкции языка Python. Операторы, переменные, вызовы функций.
Представление чисел в памяти. Битовые операции, модуль ctypes.
Целочисленная арифметика в Python. Операции с целыми числами (int), которые являются числами с произвольной точностью.
Целочисленная арифметика в Python. Поведение целых чисел (int) при умножении и делении.
Операции сложения и вычитания в Python. Арифметические операторы +, -.
Присваивание и ссылочная модель в Python. Переменные как ссылки на объекты.
Работа с байтами и байтовыми строками. Типы bytes и bytearray.
Условные операторы и сравнения в Python. Операторы if, elif, else, операторы сравнения (==, >, < и т.д.).
Безусловное изменение потока выполнения. Оператор goto (отсутствует), использование functions и exceptions.
Косвенное выполнение кода. Вызов функций через ссылки, использование словарей для управления потоком.
Индексы элементов последовательностей. Работа со списками (list), строками (str), кортежами (tuple).
Инициализация и описание списков, кортежей. Литералы, генераторы списков.
Одномерные массивы (списки). Поиск максимума (max()), минимума (min()), суммы (sum()).
Алгоритмы сортировки в Python. Использование встроенной функции sorted() и метода list.sort(), реализация пузырьковой сортировки для обучения.
Фильтрация последовательностей. Использование списковых включений (list comprehensions) и функции filter().
Двумерные массивы (списки списков). Создание, инициализация, вывод в виде матрицы.
Работа с адресами объектов и таблицами подстановки. Функция id() и использование словарей (dict) для подстановки.
Циклы в Python. Циклы while и for, реализация циклов с постусловием.
Управление циклами. Использование break и continue для прерывания циклов по условию.
Создание составных типов данных. Использование классов (class) и именованных кортежей (namedtuple).
Экземпляры классов. Создание объектов (экземпляров) класса.
Доступ к атрибутам объектов. Точечная нотация (например, obj.attribute).
Битовые операции в Python. Операторы &, |, ^, ~, <<, >>.

2 блок
Битовые сдвиги в Python. Операторы << (сдвиг влево), >> (сдвиг вправо).
Логические (беззнаковые) сдвиги. Особенности реализации сдвигов в Python.
Арифметические (знаковые) сдвиги. Особенности реализации сдвигов в Python.
Циклические сдвиги. Реализация с помощью комбинации битовых операций.
Упаковка данных. Модули struct и array для работы с бинарными данными.
Представление множеств на низком уровне. Использование битовых масок и тип данных set в Python.
Операции над множествами. Использование встроенного типа set и его методов (union, intersection, difference).
Организация кода: модули и функции. Создание функций и модулей для структурирования программы.
Вызов функций в Python. Оператор вызова ().
Операции над множествами. (Повторение, дубликат из 2.7) Использование встроенного типа set.
Организация кода: модули и функции. (Повторение, дубликат из 2.8) Создание функций и модулей.
Вызов функций в Python. (Повторение, дубликат из 2.9) Оператор вызова ().
Возврат из функции. Оператор return.
Передача параметров в функцию. Аргументы функции.
Структура программы с функциями. Формальные и фактические параметры (аргументы).
Способы передачи аргументов. Позиционные и ключевые аргументы.
Передача последовательностей в функцию. Передача списков, кортежей и других итерируемых объектов.
Стек вызовов в Python. Понятие стека вызовов функций, рекурсия.
Работа со стеком. Использование списка (list) как стека с помощью методов append() и pop().
Флаги и состояние программы. Обработка исключений (try...except), проверка условий.
Операции над последовательностями. Встроенные функции (map, filter, zip), методы строк и списков.
Обработка последовательностей. Использование циклов for и генераторов.
Сравнение последовательностей. Операторы сравнения ==, != для списков и строк.
Документирование кода. Строки документирования (docstrings), комментарии, модули like pydoc.